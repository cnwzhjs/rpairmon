#include <rp/airmon/utils/weather_glyph.h>

#include <map>
#include <mutex>

struct glyph_item_ {
    const char* symbol;
    const char* glyph;
};

static const glyph_item_ glyph_items_[] = {
    {"day-cloudy-gusts", "\xef\x80\x80"},
    {"day-cloudy-windy", "\xef\x80\x81"},
    {"day-cloudy", "\xef\x80\x82"},
    {"day-fog", "\xef\x80\x83"},
    {"day-hail", "\xef\x80\x84"},
    {"day-lightning", "\xef\x80\x85"},
    {"day-rain-mix", "\xef\x80\x86"},
    {"day-rain-wind", "\xef\x80\x87"},
    {"day-rain", "\xef\x80\x88"},
    {"day-showers", "\xef\x80\x89"},
    {"day-snow", "\xef\x80\x8a"},
    {"day-sprinkle", "\xef\x80\x8b"},
    {"day-sunny-overcast", "\xef\x80\x8c"},
    {"day-sunny", "\xef\x80\x8d"},
    {"day-storm-showers", "\xef\x80\x8e"},
    {"day-thunderstorm", "\xef\x80\x90"},
    {"cloudy-gusts", "\xef\x80\x91"},
    {"cloudy-windy", "\xef\x80\x92"},
    {"cloudy", "\xef\x80\x93"},
    {"fog", "\xef\x80\x94"},
    {"hail", "\xef\x80\x95"},
    {"lightning", "\xef\x80\x96"},
    {"rain-mix", "\xef\x80\x97"},
    {"rain-wind", "\xef\x80\x98"},
    {"rain", "\xef\x80\x99"},
    {"showers", "\xef\x80\x9a"},
    {"snow", "\xef\x80\x9b"},
    {"sprinkle", "\xef\x80\x9c"},
    {"storm-showers", "\xef\x80\x9d"},
    {"thunderstorm", "\xef\x80\x9e"},
    {"windy", "\xef\x80\xa1"},
    {"night-alt-cloudy-gusts", "\xef\x80\xa2"},
    {"night-alt-cloudy-windy", "\xef\x80\xa3"},
    {"night-alt-hail", "\xef\x80\xa4"},
    {"night-alt-lightning", "\xef\x80\xa5"},
    {"night-alt-rain-mix", "\xef\x80\xa6"},
    {"night-alt-rain-wind", "\xef\x80\xa7"},
    {"night-alt-rain", "\xef\x80\xa8"},
    {"night-alt-showers", "\xef\x80\xa9"},
    {"night-alt-snow", "\xef\x80\xaa"},
    {"night-alt-sprinkle", "\xef\x80\xab"},
    {"night-alt-storm-showers", "\xef\x80\xac"},
    {"night-alt-thunderstorm", "\xef\x80\xad"},
    {"night-clear", "\xef\x80\xae"},
    {"night-cloudy-gusts", "\xef\x80\xaf"},
    {"night-cloudy-windy", "\xef\x80\xb0"},
    {"night-cloudy", "\xef\x80\xb1"},
    {"night-hail", "\xef\x80\xb2"},
    {"night-lightning", "\xef\x80\xb3"},
    {"night-rain-mix", "\xef\x80\xb4"},
    {"night-rain-wind", "\xef\x80\xb5"},
    {"night-rain", "\xef\x80\xb6"},
    {"night-showers", "\xef\x80\xb7"},
    {"night-snow", "\xef\x80\xb8"},
    {"night-sprinkle", "\xef\x80\xb9"},
    {"night-storm-showers", "\xef\x80\xba"},
    {"night-thunderstorm", "\xef\x80\xbb"},
    {"celsius", "\xef\x80\xbc"},
    {"cloud-down", "\xef\x80\xbd"},
    {"cloud-refresh", "\xef\x80\xbe"},
    {"cloud-up", "\xef\x81\x80"},
    {"cloud", "\xef\x81\x81"},
    {"degrees", "\xef\x81\x82"},
    {"down-left", "\xef\x81\x83"},
    {"down", "\xef\x81\x84"},
    {"fahrenheit", "\xef\x81\x85"},
    {"horizon-alt", "\xef\x81\x86"},
    {"horizon", "\xef\x81\x87"},
    {"left", "\xef\x81\x88"},
    {"_reserved_", "\xef\x81\x89"},
    {"night-fog", "\xef\x81\x8a"},
    {"refresh-alt", "\xef\x81\x8b"},
    {"refresh", "\xef\x81\x8c"},
    {"right", "\xef\x81\x8d"},
    {"sprinkles", "\xef\x81\x8e"},
    {"strong-wind", "\xef\x81\x90"},
    {"sunrise", "\xef\x81\x91"},
    {"sunset", "\xef\x81\x92"},
    {"thermometer-exterior", "\xef\x81\x93"},
    {"thermometer-internal", "\xef\x81\x94"},
    {"thermometer", "\xef\x81\x95"},
    {"tornado", "\xef\x81\x96"},
    {"up-right", "\xef\x81\x97"},
    {"up", "\xef\x81\x98"},
    {"wind-west", "\xef\x81\x99"},
    {"wind-south-west", "\xef\x81\x9a"},
    {"wind-south-east", "\xef\x81\x9b"},
    {"wind-south", "\xef\x81\x9c"},
    {"wind-north-west", "\xef\x81\x9d"},
    {"wind-north-east", "\xef\x81\x9e"},
    {"wind-north", "\xef\x81\xa0"},
    {"wind-east", "\xef\x81\xa1"},
    {"smoke", "\xef\x81\xa2"},
    {"dust", "\xef\x81\xa3"},
    {"snow-wind", "\xef\x81\xa4"},
    {"day-snow-wind", "\xef\x81\xa5"},
    {"night-snow-wind", "\xef\x81\xa6"},
    {"night-alt-snow-wind", "\xef\x81\xa7"},
    {"day-sleet-storm", "\xef\x81\xa8"},
    {"night-sleet-storm", "\xef\x81\xa9"},
    {"night-alt-sleet-storm", "\xef\x81\xaa"},
    {"day-snow-thunderstorm", "\xef\x81\xab"},
    {"night-snow-thunderstorm", "\xef\x81\xac"},
    {"night-alt-snow-thunderstorm", "\xef\x81\xad"},
    {"solar-eclipse", "\xef\x81\xae"},
    {"lunar-eclipse", "\xef\x81\xb0"},
    {"meteor", "\xef\x81\xb1"},
    {"hot", "\xef\x81\xb2"},
    {"hurricane", "\xef\x81\xb3"},
    {"smog", "\xef\x81\xb4"},
    {"alien", "\xef\x81\xb5"},
    {"snowflake-cold", "\xef\x81\xb6"},
    {"stars", "\xef\x81\xb7"},
    {"night-partly-cloudy", "\xef\x82\x83"},
    {"umbrella", "\xef\x82\x84"},
    {"day-windy", "\xef\x82\x85"},
    {"night-alt-cloudy", "\xef\x82\x86"},
    {"up-left", "\xef\x82\x87"},
    {"down-right", "\xef\x82\x88"},
    {"time-12", "\xef\x82\x89"},
    {"time-1", "\xef\x82\x8a"},
    {"time-2", "\xef\x82\x8b"},
    {"time-3", "\xef\x82\x8c"},
    {"time-4", "\xef\x82\x8d"},
    {"time-5", "\xef\x82\x8e"},
    {"time-6", "\xef\x82\x8f"},
    {"time-7", "\xef\x82\x90"},
    {"time-8", "\xef\x82\x91"},
    {"time-9", "\xef\x82\x92"},
    {"time-10", "\xef\x82\x93"},
    {"time-11", "\xef\x82\x94"},
    {"moon-new", "\xef\x82\x95"},
    {"moon-waxing-cresent-1", "\xef\x82\x96"},
    {"moon-waxing-cresent-2", "\xef\x82\x97"},
    {"moon-waxing-cresent-3", "\xef\x82\x98"},
    {"moon-waxing-cresent-4", "\xef\x82\x99"},
    {"moon-waxing-cresent-5", "\xef\x82\x9a"},
    {"moon-waxing-cresent-6", "\xef\x82\x9b"},
    {"moon-first-quarter", "\xef\x82\x9c"},
    {"moon-waxing-gibbous-1", "\xef\x82\x9d"},
    {"moon-waxing-gibbous-2", "\xef\x82\x9e"},
    {"moon-waxing-gibbous-3", "\xef\x82\x9f"},
    {"moon-waxing-gibbous-4", "\xef\x82\xa0"},
    {"moon-waxing-gibbous-5", "\xef\x82\xa1"},
    {"moon-waxing-gibbous-6", "\xef\x82\xa2"},
    {"moon-full", "\xef\x82\xa3"},
    {"moon-waning-gibbous-1", "\xef\x82\xa4"},
    {"moon-waning-gibbous-2", "\xef\x82\xa5"},
    {"moon-waning-gibbous-3", "\xef\x82\xa6"},
    {"moon-waning-gibbous-4", "\xef\x82\xa7"},
    {"moon-waning-gibbous-5", "\xef\x82\xa8"},
    {"moon-waning-gibbous-6", "\xef\x82\xa9"},
    {"moon-3rd-quarter", "\xef\x82\xaa"},
    {"moon-waning-crescent-1", "\xef\x82\xab"}, 
    {"moon-waning-crescent-2", "\xef\x82\xac"}, 
    {"moon-waning-crescent-3", "\xef\x82\xad"}, 
    {"moon-waning-crescent-4", "\xef\x82\xae"}, 
    {"moon-waning-crescent-5", "\xef\x82\xaf"}, 
    {"moon-waning-crescent-6", "\xef\x82\xb0"}, 
    {"wind-default", "\xef\x82\xb1"},
    {"day-sleet", "\xef\x82\xb2"},
    {"night-sleet", "\xef\x82\xb3"},
    {"night-alt-sleet", "\xef\x82\xb4"},
    {"sleet", "\xef\x82\xb5"},
    {"day-haze", "\xef\x82\xb6"},
    {"beafort-0", "\xef\x82\xb7"},
    {"beafort-1", "\xef\x82\xb8"},
    {"beafort-2", "\xef\x82\xb9"},
    {"beafort-3", "\xef\x82\xba"},
    {"beafort-4", "\xef\x82\xbb"},
    {"beafort-5", "\xef\x82\xbc"},
    {"beafort-6", "\xef\x82\xbd"},
    {"beafort-7", "\xef\x82\xbe"},
    {"beafort-8", "\xef\x82\xbf"},
    {"beafort-9", "\xef\x83\x80"},
    {"beafort-10", "\xef\x83\x81"},
    {"beafort-11", "\xef\x83\x82"},
    {"beafort-12", "\xef\x83\x83"}
};

static const char* yahoo_weather_codes_[] = {
    "tornado",
    "storm-showers",
    "tornado",
    "thunderstorm",
    "thunderstorm",
    "snow",
    "rain-mix",
    "rain-mix",
    "sprinkle",
    "sprinkle",
    "hail",
    "showers",
    "showers",
    "snow",
    "storm-showers",
    "snow",
    "snow",
    "hail",
    "hail",
    "cloudy-gusts",
    "fog",
    "fog",
    "fog",
    "cloudy-gusts",
    "cloudy-windy",
    "thermometer",
    "cloudy",
    "night-cloudy",
    "day-cloudy",
    "night-cloudy",
    "day-cloudy",
    "night-clear",
    "day-sunny",
    "night-clear",
    "day-sunny-overcast",
    "hail",
    "day-sunny",
    "thunderstorm",
    "thunderstorm",
    "thunderstorm",
    "storm-showers",
    "snow",
    "snow",
    "snow",
    "cloudy",
    "lightning",
    "snow",
    "thunderstorm"
};

namespace rp { namespace airmon { namespace utils {

    static std::once_flag once_;
    static std::map<std::string, std::string> font_glyph_;

    static void init_font_glyph_()
    {
        for (size_t i = 0; i < sizeof(glyph_items_) / sizeof(glyph_item_); i++)
        {
            font_glyph_[glyph_items_[i].symbol] = glyph_items_[i].glyph;
        }
    }

    std::string lookup_glyph(const std::string& symbol)
    {
        std::call_once(once_, &init_font_glyph_);
        auto iter = font_glyph_.find(symbol);

        return iter == font_glyph_.end() ? "\xf0\x41" : iter->second;
    }

    std::string lookup_symbol(int yahooWeatherId)
    {
        if (yahooWeatherId >= 0 && yahooWeatherId < sizeof(yahoo_weather_codes_) / sizeof(const char*))
        {
            return yahoo_weather_codes_[yahooWeatherId];
        }

        return "cloudy";
    }

} } }
